<SectionTitleSlide as |s|>
  <s.Title>Project Structure</s.Title>

  <s.Notes data-markdown>
    How do you organize all your components?

    this is a really big difference between react and ember right out of the gate, because...
  </s.Notes>
</SectionTitleSlide>

<Slide as |s|>
  <s.ContextTitle><span class='react-color'>React</span> Project Structure</s.ContextTitle>
  <h3>move files around until it feels right</h3>
  <span class='is-size-7'>
    this is
    <ExternalLink @to='https://mobile.twitter.com/dan_abramov/status/1027248875072114689'>
      not a joke
    </ExternalLink>
  </span>

  <ExternalLink
    class='is-size-4'
    style='position: fixed; bottom: 40px;'
    @to='https://react-file-structure.surge.sh/'>
    react-file-structure.surge.sh
  </ExternalLink>

  <s.Notes data-markdown>
    Pretty chill.
    with great power comes great responsibility

    - But this much flexibility can be a rather large footgun until a person has built several large react apps.

    - Hard to enforce across multiple team members, because there is nothing to enforce.


    the goal of an agreed upon layout is to
    "eliminating the trivial differences between our apps",
  </s.Notes>
</Slide>

<Slide class='align-top' as |s|>
  <s.ContextTitle><span class='ember-color'>Ember</span> Project Structure</s.ContextTitle>

  <div class='flex-row'>
    <s.LeftCode>
      <h4>"Classic"</h4>

      <div class='tree-container start-expanded'>
        <ProjectStructureRenderer @tree={{this.classicTree}} />
      </div>
    </s.LeftCode>

    <s.RightCode>
      <h4>Module Unification</h4>

      <div class='tree-container start-expanded'>
        <ProjectStructureRenderer @tree={{this.muTree}} />
      </div>
    </s.RightCode>
  </div>

  <s.Notes data-markdown>
    In Ember, project structure is programatically enforced.
     - no one on any teams needs to decide where things need to go, there is a place.
     - structure enforcement is handled by the ember-resolver

    NOTE: Module Unification is not yet released, and is considered experimental for now
  </s.Notes>
</Slide>


<Slide class='align-top' as |s|>
  <s.ContextTitle>Project Structure for All</s.ContextTitle>

  <div class='flex-row justify-content-start height-100 w-100'>
    <div class='tree-container start-expanded flex-grow'>
      <ProjectStructureRenderer @tree={{this.genericTree}} />
    </div>
  </div>

  <s.Notes data-markdown>
    Can be used in all ecosystems,
    React, Ember, Vue, Angular, etc

    Mental Model of code matches the model used for interacting with the app
  </s.Notes>
</Slide>

<Slide class='align-top' as |s|>
  <s.ContextTitle>
    <span class='react-color'>React</span>
    &amp;
    <span class='ember-color'>Ember</span> - Redux
  </s.ContextTitle>

  <div class='flex-row justify-content-start height-100'>
    <div class='flex-column flex-width-50'>
      <h4 class='react-color'>React</h4>

      <div class='tree-container start-expanded'>
        <ProjectStructureRenderer @tree={{this.reactReduxTree}} />
      </div>
    </div>
    <div class='flex-column flex-width-50'>
      <h4 class='ember-color'>Ember</h4>

      <div class='tree-container start-expanded'>
        <ProjectStructureRenderer @tree={{this.emberReduxTree}} />
      </div>
    </div>
  </div>

  <s.Notes data-markdown>
    redux is independent of framework, so you can simply copy-paste your redux folder between technologies as I've done here.
  </s.Notes>
</Slide>


<Slide class='align-top' as |s|>
  <s.ContextTitle>
    <span class='react-color'>React</span>
    &amp;
    <span class='ember-color'>Ember</span> - Real Projects
  </s.ContextTitle>

  <div class='flex-row justify-content-start height-100'>
    <div class='flex-column flex-width-50'>
      <h4 class='react-color'>
        <ExternalLink @to='https://github.com/sillsdev/appbuilder-portal/'>
          SIL App Builder
        </ExternalLink>
      </h4>

      <div class='tree-container start-expanded'>
        <ProjectStructureRenderer @tree={{this.silAppBuilderTree}} />
      </div>
    </div>
    <div class='flex-column flex-width-50'>
      <h4 class='ember-color'>
        <ExternalLink @to='https://emberclear.io'>emberclear</ExternalLink>
      </h4>

      <div class='tree-container start-expanded'>
        <ProjectStructureRenderer @tree={{this.emberclearTree}} />
      </div>
    </div>
  </div>

  <s.Notes data-markdown></s.Notes>
</Slide>
